generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  PROVIDER
  ADMIN
}

enum ProviderStatus {
  PENDING
  ACTIVE
  SUSPENDED
}

enum ServiceStatus {
  PENDING
  APPROVED
  REJECTED
}

model User {
  id            String      @id @default(uuid())
  name          String
  email         String      @unique
  password      String
  role          UserRole    @default(USER)
  emailVerified Boolean     @default(false)
  image         String?
  provider      Provider?
  admin         Admin?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Admin {
  id        String    @id @default(uuid())
  userId    String    @unique
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  reports   Report[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Provider {
  id            String        @id @default(uuid())
  userId        String        @unique
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  phone         String
  status        ProviderStatus @default(PENDING)
  services      Service[]
  reports       Report[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Service {
  id              String        @id @default(uuid())
  title           String
  description     String
  images          String[]
  price           Float
  category        String
  status          ServiceStatus @default(PENDING)
  rejectionReason String?
  providerId      String
  provider        Provider      @relation(fields: [providerId], references: [id])
  reports         Report[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Report {
  id          String    @id @default(uuid())
  reason      String
  serviceId   String
  service     Service   @relation(fields: [serviceId], references: [id])
  adminId     String
  admin       Admin     @relation(fields: [adminId], references: [id])
  providerId  String
  provider    Provider  @relation(fields: [providerId], references: [id])
  createdAt   DateTime  @default(now())
}
